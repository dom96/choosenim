# This workflow will automatically upload a binary artifact when a release/tag  is created
name: Build and upload binary

on:
  # allow to build manually
  workflow_dispatch:
  # build automatically when pushing a tag
  push:
    branches:
      - "!*"
    tags:
      - "v*"

jobs:
  build:
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows builds
          - os: windows-latest
            target: x86_64-windows-gnu
            suffix: windows_amd64
            cpu: amd64
          - os: windows-latest
            target: aarch64-windows-gnu
            suffix: windows_arm64
            cpu: arm64
          # Linux builds
          - os: ubuntu-latest
            target: aarch64-linux-gnu
            suffix: linux_arm64
            cpu: arm64
          - os: ubuntu-latest
            target: x86_64-linux-gnu
            suffix: linux_amd64
            cpu: amd64
          # MacOS builds
          - os: macos-latest
            target: aarch64-macos-none
            suffix: macos_arm64
            cpu: arm64
          - os: macos-latest
            target: x86_64-macos-none
            suffix: macos_amd64
            cpu: amd64
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install zig
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.11.0
      - name: Install dependencies
        run: |
          nimble install -y zigcc
      - name: Build proxy
        run: |
            nimble -y c src/choosenimpkg/proxyexe -d:zig.target="${{ matrix.target }}" --cpu:"${{ matrix.cpu }}" -d:release --opt:size
      - name: Build binary
        run: |
            nimble -y build -d:noBuildProxy -d:zig.target="${{ matrix.target }}" --cpu:"${{ matrix.cpu }}" -d:release --opt:size

      - name: Update file name
        if: ${{ matrix.os == 'ubuntu-latest' || matrix == 'macos-latest' }}
        run: mv bin/choosenim bin/choosenim-${{ github.ref_name }}_${{ matrix.suffix }}
      - name: Update file name
        if: ${{ matrix.os == 'windows-latest' }}
        run: mv bin\choosenim.exe bin\choosenim-${{ github.ref_name }}_${{ matrix.suffix }}.exe

      - name: Upload binaries to release/tag
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          overwrite: true
          file_glob: true
          tag: ${{ github.ref }}
          file: bin/choosenim-${{ github.ref_name }}_${{ matrix.suffix }}*
      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: choosenim-${{ github.ref_name }}_${{ matrix.suffix }}
          path: bin/choosenim-${{ github.ref_name }}_${{ matrix.suffix }}*
          retention-days: 1

  deploy-site:
    name: Deploy site
    needs: build
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download workflow artifact
        uses: actions/download-artifact@v4
        with:
          path: site/

      # https://stackoverflow.com/questions/1500204/how-do-i-remove-specific-characters-from-file-names-using-bash
      - name: Remove enclosing folder and fix names
        working-directory: site
        run: |
          for file in *; do
            mv "${file}/${file}" "${file/${{ github.ref_name }}/latest}";
          done

      - name: Add latest version
        run: echo "${{ github.ref_name }}" >> site/stable

      - name: Setup Nim
        uses: jiro4989/setup-nim-action@v1
        with:
          version: devel
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create index
        run: nim md2html --out:site/index.html readme.md

      - name: Add init script
        run: mv scripts/choosenim-unix-init.sh site/init.sh

      - name: Create pages artefact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site/

      - name: Deploy site
        uses: actions/deploy-pages@v4

